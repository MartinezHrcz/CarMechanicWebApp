@page "/ClientPage"
@using Mechanic.Shared.Modells
@using WebASM.Services
@inject IClientService ClientService
<link href="css/mechanic.css" rel="stylesheet" />

<h3>Client Manager</h3>

<div class="d-flex justify-content-start mb-4 gap-2">
    <NavLink class="btn btn-primary" href="ClientAdd">➕ Add New</NavLink>
    <NavLink class="btn btn-warning" href="ClientUpdate">✏️ Update</NavLink>
    <button class="btn btn-danger" onclick="@DeleteById">🗑️ Delete</button>
    <input class="form-control-sm bg-light-subtle border-danger" placeholder="Delete by id" @bind="selectById">
</div>
<div class="d-flex justify-content-start mb-4">
    <NavLink class="btn btn-success" href="WorkSearch">Search jobs by client</NavLink>
</div>

<table class="table table-dark table-striped-columns">
    <thead>
    <tr>
        <th>ID</th>
        <th>Name</th>
        <th>Email</th>
        <th>Address</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var client in clientList)
    {
        <tr>
            <td>@client.id</td>
            <td>@client.Name</td>
            <td>@client.Email</td>
            <td>@client.Address</td>
        </tr>
    }
    </tbody>
</table>

@code {

    string selectById = "";
    private List<Client> clientList = new List<Client>();

    protected override async Task OnInitializedAsync()
    {
        clientList = await ClientService.GetClientsAsync();
        StateHasChanged();
    }

    private async void DeleteById()
    {
        short result;
        selectById = selectById.Trim();
        if (Int16.TryParse(selectById, out result) )
        {
            if (clientList.Select(x => x.id).Contains(result))
            {
                await ClientService.DeleteClientAsync(result);
                clientList = await ClientService.GetClientsAsync();
                StateHasChanged();
            }
        }
    }

}