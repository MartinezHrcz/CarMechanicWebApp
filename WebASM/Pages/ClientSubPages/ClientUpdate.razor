@page "/ClientUpdate"
@using Mechanic.Shared.Modells
@using WebASM.Services
@inject IClientService ClientService
@inject IJSRuntime JS
@inject NavigationManager Navigator
<link href="css/mechanic.css" rel="stylesheet" />
<h3>Update client data</h3>
<div class="container mt-4">
    <div class="row">
        <div class="col-md-6">

            <!-- Client selecct dropdown-->
            <div class="mb-3">
                <label for="clientselect" class="form-label">Select Client to be updated</label>
                <select class="form-select" id="clientselect" @onchange="SelectClient">
                    <option disabled selected value="" >-- Choose a Client --</option>
                    @if (clients.Count > 0)
                    {
                        @foreach (var client in clients)
                        {
                            <option value="@client.id">@client.id, @client.Name</option>
                        }
                    }
                </select>
            </div>

            <!-- Name -->
            <div class="mb-3">

                <label for="name" class="form-label">Name
                    (current:
                    @if (!old.Equals(new Client()))
                    {
                        @old.Name
                    }
                    )
                </label>
                <input type="text" id="name" class="form-control" placeholder="Type name here" @bind="Name"/>
            </div>

            <!-- Email -->
            <div class="mb-3">
                <label for="email" class="form-label">Email (current: @if (!old.Equals(new Client())) { @old.Email})
                </label>
                <input type="email" id="email" class="form-control" placeholder="xyz@gmail.com" @bind="Email"/>
            </div>

            <!-- Address -->
            <div class="mb-3">
                <label for="address" class="form-label">Address (current:
                    @if (!old.Equals(new Client()))
                    {
                        @old.Address
                    }
                    )</label>
                <input type="text" id="address" class="form-control" placeholder="e.g. Hajnal street 6." @bind="Address" />
            </div>

            <button class="btn btn-primary" @onclick="UpdateClient" >Add Work</button>

        </div>
    </div>
</div>

@code {


    //data, progress should be always default to the first enum (0)
    int selectedClient;
    string Name = "";
    string Email = "";
    string Address = "";
    Client old = new Client();

    List<Client> clients = new List<Client>();

    protected override async Task OnInitializedAsync()
    {
        clients = await ClientService.GetClientsAsync();
        StateHasChanged();
    }

    public async void UpdateClient()
    { 
        if (!(clients.Select(x=>x.id).Contains(selectedClient)))
        {
            return;
        }

        if (Name.Trim().Length > 0)
        {
            old.Name = Name;
        }

        if (Email.Trim().Length > 0)
        {
            old.Email = Email;
        }

        if (Address.Trim().Length > 0)
        {
            old.Address = Address;
        }

        await ClientService.UpdateClientAsync(selectedClient, old);
        
        Navigator.NavigateTo("/ClientPage");
    }

    private async void SelectClient(ChangeEventArgs e)
    {
        if (e.Value == null)
        {
            return;
        }
        
        selectedClient = int.Parse(e.Value.ToString());
        old = await ClientService.GetClientByIdAsync(selectedClient);

        StateHasChanged();
    }

}